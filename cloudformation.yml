AWSTemplateFormatVersion: "2010-09-09"
Description: >
  AWS CloudFormation template for creating infrastructure components,
  including ALB, WAF, and ACM certificate.

Parameters:
  Client:
    Type: String
    Description: The client name to use in resource naming.

  YourIP:
    Type: String
    Description: Your IP address for SSH and HTTP access.

  AmiId:
    Type: String
    Description: The AMI ID to use for the EC2 instance.

  SshPublicKey:
    Type: String
    Description: The SSH public key to use for the EC2 instance.

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC.

  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the first subnet.

  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the second subnet.

  ACMCertificateArn:
    Type: String
    Description: The ARN of the ACM certificate for the subdomain.
    Default: ""

  SubdomainName:
    Type: String
    Description: The subdomain name for the ALB.
    Default: ""

Conditions:
  HasSubdomain: !Not [!Equals [!Ref SubdomainName, ""]]
  HasACMCertificate: !Not [!Equals [!Ref ACMCertificateArn, ""]]
  CreateHTTPListener: !Not [!Condition HasACMCertificate]

Resources:
  # Key Pair for EC2 Instance
  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: impress
      PublicKeyMaterial: !Ref SshPublicKey

  # S3 Bucket for Assets
  S3BucketAssets:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Client}-assets
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: true
        IgnorePublicAcls: false
        RestrictPublicBuckets: true

  # S3 Bucket for Backups
  S3BucketBackups:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Client}-backups

  # IAM Role for Strapi
  StrapiRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: strapi
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: strapi-db-backup
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource: !Sub arn:aws:s3:::${Client}-backups/*
        - PolicyName: media-management
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObjectAcl
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:PutObjectAcl
                Resource: !Sub arn:aws:s3:::${Client}-assets/*

  # Security Group for Load Balancer
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTPS traffic from anywhere and HTTP traffic only from the ALB
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  # Security Group for EC2 Instance
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Sub ${YourIP}/32
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup

  # Application Load Balancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "${Client}-alb"
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Scheme: internet-facing

  # Target Group for EC2 Instance
  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Client}-tg
      TargetType: instance
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckPath: /
      Targets:
          - Id: !Ref EC2Instance
            Port: 80

  # ALB Listener for HTTP (Initial setup without HTTPS)
  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: CreateHTTPListener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup

  # ALB Listener for HTTPS (conditionally created if ACMCertificateArn is provided)
  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: HasACMCertificate
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref ACMCertificateArn
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup

  # EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: t2.medium
      KeyName: impress
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 30
      SubnetId: !Ref Subnet1

  # Instance Profile for EC2
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref StrapiRole

  # WAF WebACL
  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub ${Client}-webacl
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub ${Client}-webacl
      Rules:
        - Name: AWS-AWSManagedRulesAmazonIpReputationList
          Priority: 0
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAmazonIpReputationList
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesAmazonIpReputationList
        - Name: AWS-AWSManagedRulesAnonymousIpList
          Priority: 1
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAnonymousIpList
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesAnonymousIpList
        - Name: allow-strapi-media-uploads
          Priority: 2
          Statement:
            AndStatement:
              Statements:
                - ByteMatchStatement:
                    SearchString: /upload
                    FieldToMatch:
                      UriPath: {}
                    TextTransformations:
                      - Priority: 0
                        Type: NONE
                    PositionalConstraint: EXACTLY
                - ByteMatchStatement:
                    SearchString: POST
                    FieldToMatch:
                      Method: {}
                    TextTransformations:
                      - Priority: 0
                        Type: NONE
                    PositionalConstraint: EXACTLY
                - GeoMatchStatement:
                    CountryCodes:
                      - AU
                      - ID
                - SizeConstraintStatement:
                    FieldToMatch:
                      SingleHeader:
                        Name: authorization
                    ComparisonOperator: GE
                    Size: 100
                    TextTransformations:
                      - Priority: 0
                        Type: NONE
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: allow-strapi-media-uploads
        - Name: AWS-AWSManagedRulesCommonRuleSet
          Priority: 3
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesCommonRuleSet
        - Name: AWS-AWSManagedRulesSQLiRuleSet
          Priority: 4
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesSQLiRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesSQLiRuleSet
        - Name: AWS-AWSManagedRulesLinuxRuleSet
          Priority: 5
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesLinuxRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesLinuxRuleSet
        - Name: AWS-AWSManagedRulesKnownBadInputsRuleSet
          Priority: 6
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesKnownBadInputsRuleSet

  # WAF Association with ALB
  WebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Ref LoadBalancer
      WebACLArn: !GetAtt WebACL.Arn

Outputs:
  S3BucketAssetsName:
    Description: The name of the assets S3 bucket
    Value: !Ref S3BucketAssets

  S3BucketBackupsName:
    Description: The name of the backups S3 bucket
    Value: !Ref S3BucketBackups

  EC2InstanceID:
    Description: The instance ID of the EC2 instance
    Value: !Ref EC2Instance

  LoadBalancerDNSName:
    Description: The DNS name of the load balancer
    Value: !GetAtt LoadBalancer.DNSName
